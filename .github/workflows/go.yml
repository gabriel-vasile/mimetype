name: Run Tests
on:
  push:
    branches:
      - master
  pull_request:

permissions:
  contents: read

jobs:
  lint:
    strategy:
      matrix:
        go-version: ["1.18.x"]
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2.2.0
      with:
        go-version: 1.16
    - name: Checkout code
      uses: actions/checkout@v3.0.1
    - name: Run linters
      uses: golangci/golangci-lint-action@v3.1.0
      with:
        version: "v1.37.1"
        go-version: ${{ matrix.go-version }}

  test:
    strategy:
      matrix:
        go-version: ["1.12.0", "1.18.x"]
        platform: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Install Go
      if: success()
      uses: actions/setup-go@v2.2.0
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v3.0.1
    - name: Run tests
      run: go test -race ./...

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.0.1
    - name: Install Go
      if: success()
      uses: actions/setup-go@v2.2.0
      with:
        go-version: "1.18.x"
    - name: Generate coverage
      run: go test -race -covermode=atomic -coverprofile=coverage.out
    - uses: codecov/codecov-action@v3.1.0
      with:
        files: ./coverage.out
